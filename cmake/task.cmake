#!/usr/bin/env -S cmake -P
cmake_minimum_required(VERSION 3.29)

if(NOT TASK_SOURCE_DIR)
    message(FATAL_ERROR "TASK_SOURCE_DIR not set")
endif()
if(NOT TASK_NAME)
    message(FATAL_ERROR "TASK_NAME not set")
endif()

# First "VERSION 1.2.3" is the "cmake_minimum_required()" directive.
# Second one is the "project()" directive which we want.
file(READ "${TASK_SOURCE_DIR}/CMakeLists.txt" cmake_lists_txt)
string(REGEX MATCHALL "VERSION [0-9a-zA-Z_\\.\\-]+" version_matches "${cmake_lists_txt}")
list(GET version_matches 1 project_version_match)
string(SUBSTRING "${project_version_match}" 8 -1 project_version)
message(DEBUG "project_version=${project_version}")

# Discard any "-rc.1" or "-beta.2" suffixes.
string(REGEX MATCH "[0-9]+\\.[0-9]+\\.[0-9]+" node_version "${project_version}")
message(DEBUG "node_version=${node_version}")

function(file_download_ok url file)
    file(DOWNLOAD "${url}" "${file}" STATUS status)
    if(NOT status EQUAL 0)
        message(FATAL_ERROR "Failed to download ${url}")
    endif()
endfunction()

function(task_generate)
    message(STATUS "Downloading node-v${node_version}-* archives")
    file_download_ok("https://nodejs.org/dist/v${node_version}/node-v${node_version}-darwin-arm64.tar.gz" "${TASK_SOURCE_DIR}/node-darwin-arm64.tar.gz")
    file_download_ok("https://nodejs.org/dist/v${node_version}/node-v${node_version}-darwin-x64.tar.gz" "${TASK_SOURCE_DIR}/node-darwin-x64.tar.gz")
    file_download_ok("https://nodejs.org/dist/v${node_version}/node-v${node_version}-linux-arm64.tar.xz" "${TASK_SOURCE_DIR}/node-linux-arm64.tar.xz")
    file_download_ok("https://nodejs.org/dist/v${node_version}/node-v${node_version}-linux-x64.tar.xz" "${TASK_SOURCE_DIR}/node-linux-x64.tar.xz")
    file_download_ok("https://nodejs.org/dist/v${node_version}/node-v${node_version}-win-arm64.zip" "${TASK_SOURCE_DIR}/node-win-arm64.zip")
    file_download_ok("https://nodejs.org/dist/v${node_version}/node-v${node_version}-win-x64.zip" "${TASK_SOURCE_DIR}/node-win-x64.zip")
    message(STATUS "Downloaded node-v${node_version}-* archives")
endfunction()

function(file_download_ok url file)
    file(DOWNLOAD "${url}" "${file}" STATUS status)
    if(NOT status EQUAL 0)
        message(FATAL_ERROR "Failed to download ${url}")
    endif()
endfunction()

function(task_postbuild)
    if(NOT TASK_BINARY_DIR)
        message(FATAL_ERROR "TASK_BINARY_DIR not set")
    endif()
    if(NOT TARGET_FILE)
        message(FATAL_ERROR "TARGET_FILE not set")
    endif()
    find_program(zip_command NAMES zip REQUIRED)

    file(REMOVE_RECURSE "${TASK_BINARY_DIR}/node-darwin-arm64-TEMP")
    file(REMOVE_RECURSE "${TASK_BINARY_DIR}/node-darwin-x64-TEMP")
    file(REMOVE_RECURSE "${TASK_BINARY_DIR}/node-linux-arm64-TEMP")
    file(REMOVE_RECURSE "${TASK_BINARY_DIR}/node-linux-x64-TEMP")
    file(REMOVE_RECURSE "${TASK_BINARY_DIR}/node-win-arm64-TEMP")
    file(REMOVE_RECURSE "${TASK_BINARY_DIR}/node-win-x64-TEMP")
    file(REMOVE_RECURSE "${TASK_BINARY_DIR}/node-darwin-arm64")
    file(REMOVE_RECURSE "${TASK_BINARY_DIR}/node-darwin-x64")
    file(REMOVE_RECURSE "${TASK_BINARY_DIR}/node-linux-arm64")
    file(REMOVE_RECURSE "${TASK_BINARY_DIR}/node-linux-x64")
    file(REMOVE_RECURSE "${TASK_BINARY_DIR}/node-win-arm64")
    file(REMOVE_RECURSE "${TASK_BINARY_DIR}/node-win-x64")
    file(REMOVE_RECURSE "${TASK_BINARY_DIR}/node-node_modules")
    file(REMOVE_RECURSE "${TASK_BINARY_DIR}/node-unixlike")
    file(REMOVE_RECURSE "${TASK_BINARY_DIR}/node-win")

    message(STATUS "Extracting ${TASK_SOURCE_DIR}/node-* archives to ${TASK_BINARY_DIR}")
    file(ARCHIVE_EXTRACT INPUT "${TASK_SOURCE_DIR}/node-darwin-arm64.tar.gz" DESTINATION "${TASK_BINARY_DIR}")
    file(ARCHIVE_EXTRACT INPUT "${TASK_SOURCE_DIR}/node-darwin-x64.tar.gz" DESTINATION "${TASK_BINARY_DIR}")
    file(ARCHIVE_EXTRACT INPUT "${TASK_SOURCE_DIR}/node-linux-arm64.tar.xz" DESTINATION "${TASK_BINARY_DIR}")
    file(ARCHIVE_EXTRACT INPUT "${TASK_SOURCE_DIR}/node-linux-x64.tar.xz" DESTINATION "${TASK_BINARY_DIR}")
    file(ARCHIVE_EXTRACT INPUT "${TASK_SOURCE_DIR}/node-win-arm64.zip" DESTINATION "${TASK_BINARY_DIR}")
    file(ARCHIVE_EXTRACT INPUT "${TASK_SOURCE_DIR}/node-win-x64.zip" DESTINATION "${TASK_BINARY_DIR}")
    message(STATUS "Extracted ${TASK_SOURCE_DIR}/node-* archives to ${TASK_BINARY_DIR}")

    file(RENAME "${TASK_BINARY_DIR}/node-v${node_version}-darwin-arm64" "${TASK_BINARY_DIR}/node-darwin-arm64-TEMP")
    file(RENAME "${TASK_BINARY_DIR}/node-v${node_version}-darwin-x64" "${TASK_BINARY_DIR}/node-darwin-x64-TEMP")
    file(RENAME "${TASK_BINARY_DIR}/node-v${node_version}-linux-arm64" "${TASK_BINARY_DIR}/node-linux-arm64-TEMP")
    file(RENAME "${TASK_BINARY_DIR}/node-v${node_version}-linux-x64" "${TASK_BINARY_DIR}/node-linux-x64-TEMP")
    file(RENAME "${TASK_BINARY_DIR}/node-v${node_version}-win-arm64" "${TASK_BINARY_DIR}/node-win-arm64-TEMP")
    file(RENAME "${TASK_BINARY_DIR}/node-v${node_version}-win-x64" "${TASK_BINARY_DIR}/node-win-x64-TEMP")
    message(VERBOSE "Renamed ${TASK_BINARY_DIR}/node-${node_version}-* extracted folders to ${TASK_BINARY_DIR}/node-*-TEMP folders")

    file(MAKE_DIRECTORY "${TASK_BINARY_DIR}/node-node_modules")
    file(RENAME "${TASK_BINARY_DIR}/node-darwin-arm64-TEMP/lib/node_modules" "${TASK_BINARY_DIR}/node-node_modules")
    message(STATUS "Created ${TASK_BINARY_DIR}/node-node_modules")

    file(MAKE_DIRECTORY "${TASK_BINARY_DIR}/node-darwin-arm64")
    file(MAKE_DIRECTORY "${TASK_BINARY_DIR}/node-darwin-arm64/bin")
    file(RENAME "${TASK_BINARY_DIR}/node-darwin-arm64-TEMP/bin/node" "${TASK_BINARY_DIR}/node-darwin-arm64/bin/node")
    file(MAKE_DIRECTORY "${TASK_BINARY_DIR}/node-darwin-arm64/include/node")
    file(RENAME "${TASK_BINARY_DIR}/node-darwin-arm64-TEMP/include/node/config.gypi" "${TASK_BINARY_DIR}/node-darwin-arm64/include/node/config.gypi")
    file(RENAME "${TASK_BINARY_DIR}/node-darwin-arm64-TEMP" "${TASK_BINARY_DIR}/node-unixlike")
    message(STATUS "Created ${TASK_BINARY_DIR}/node-darwin-arm64")
    message(STATUS "Created ${TASK_BINARY_DIR}/node-unixlike")

    file(MAKE_DIRECTORY "${TASK_BINARY_DIR}/node-darwin-x64")
    file(MAKE_DIRECTORY "${TASK_BINARY_DIR}/node-darwin-x64/bin")
    file(RENAME "${TASK_BINARY_DIR}/node-darwin-x64-TEMP/bin/node" "${TASK_BINARY_DIR}/node-darwin-x64/bin/node")
    file(MAKE_DIRECTORY "${TASK_BINARY_DIR}/node-darwin-x64/include/node")
    file(RENAME "${TASK_BINARY_DIR}/node-darwin-x64-TEMP/include/node/config.gypi" "${TASK_BINARY_DIR}/node-darwin-x64/include/node/config.gypi")
    file(REMOVE_RECURSE "${TASK_BINARY_DIR}/node-darwin-x64-TEMP")
    message(STATUS "Created ${TASK_BINARY_DIR}/node-darwin-x64")

    file(MAKE_DIRECTORY "${TASK_BINARY_DIR}/node-linux-arm64")
    file(MAKE_DIRECTORY "${TASK_BINARY_DIR}/node-linux-arm64/bin")
    file(RENAME "${TASK_BINARY_DIR}/node-linux-arm64-TEMP/bin/node" "${TASK_BINARY_DIR}/node-linux-arm64/bin/node")
    file(MAKE_DIRECTORY "${TASK_BINARY_DIR}/node-linux-arm64/include/node")
    file(RENAME "${TASK_BINARY_DIR}/node-linux-arm64-TEMP/include/node/config.gypi" "${TASK_BINARY_DIR}/node-linux-arm64/include/node/config.gypi")
    file(REMOVE_RECURSE "${TASK_BINARY_DIR}/node-linux-arm64-TEMP")
    message(STATUS "Created ${TASK_BINARY_DIR}/node-linux-arm64")

    file(MAKE_DIRECTORY "${TASK_BINARY_DIR}/node-linux-x64")
    file(MAKE_DIRECTORY "${TASK_BINARY_DIR}/node-linux-x64/bin")
    file(RENAME "${TASK_BINARY_DIR}/node-linux-x64-TEMP/bin/node" "${TASK_BINARY_DIR}/node-linux-x64/bin/node")
    file(MAKE_DIRECTORY "${TASK_BINARY_DIR}/node-linux-x64/include/node")
    file(RENAME "${TASK_BINARY_DIR}/node-linux-x64-TEMP/include/node/config.gypi" "${TASK_BINARY_DIR}/node-linux-x64/include/node/config.gypi")
    file(REMOVE_RECURSE "${TASK_BINARY_DIR}/node-linux-x64-TEMP")
    message(STATUS "Created ${TASK_BINARY_DIR}/node-linux-x64")

    file(MAKE_DIRECTORY "${TASK_BINARY_DIR}/node-win-arm64")
    file(RENAME "${TASK_BINARY_DIR}/node-win-arm64-TEMP/node.exe" "${TASK_BINARY_DIR}/node-win-arm64/node.exe")
    file(RENAME "${TASK_BINARY_DIR}/node-win-arm64-TEMP" "${TASK_BINARY_DIR}/node-win")
    message(STATUS "Created ${TASK_BINARY_DIR}/node-win-arm64")
    message(STATUS "Created ${TASK_BINARY_DIR}/node-win")

    file(MAKE_DIRECTORY "${TASK_BINARY_DIR}/node-win-x64")
    file(RENAME "${TASK_BINARY_DIR}/node-win-x64-TEMP/node.exe" "${TASK_BINARY_DIR}/node-win-x64/node.exe")
    file(REMOVE_RECURSE "${TASK_BINARY_DIR}/node-win-x64-TEMP")
    message(STATUS "Created ${TASK_BINARY_DIR}/node-win-x64")

    message(STATUS "Zipping ${TASK_BINARY_DIR}/node-* folders into ${TARGET_FILE}")
    execute_process(COMMAND "${zip_command}" -qAr "${TARGET_FILE}" node-darwin-arm64 node-darwin-x64 node-linux-arm64 node-linux-x64 node-win-arm64 node-win-x64 node-node_modules node-unixlike node-win WORKING_DIRECTORY "${TASK_BINARY_DIR}")
    message(STATUS "Zipped ${TASK_BINARY_DIR}/node-* folders into ${TARGET_FILE}")
endfunction()

if(TASK_NAME STREQUAL generate)
    task_generate()
elseif(TASK_NAME STREQUAL postbuild)
    task_postbuild()
else()
    message(FATAL_ERROR "Unknown TASK_NAME: ${TASK_NAME}")
endif()
